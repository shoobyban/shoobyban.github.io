<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Wizguild</title>
    <link>https://wizguild.com/tags/projects/</link>
    <description>Recent content in Projects on Wizguild</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Jan 2019 07:53:33 +0000</lastBuildDate>
    
	<atom:link href="https://wizguild.com/tags/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo Static Site</title>
      <link>https://wizguild.com/hugo-static-site/</link>
      <pubDate>Thu, 24 Jan 2019 07:53:33 +0000</pubDate>
      
      <guid>https://wizguild.com/hugo-static-site/</guid>
      <description>I had WordPress for a myriad of years – it feels like. As my daily work involves moving clients away to other, less feature rich but more integrated solutions it became more and more pressing to check options for myself.
Hugo is written in Go, a language that I chose to implement several big projects. Accidentally, Hugo became an inspiration and source for documentation when I started to look for good articles about Go&amp;rsquo;s templating language that we use extensively.</description>
    </item>
    
    <item>
      <title>New tool: gwget, wget based on file list, downloading only missing files</title>
      <link>https://wizguild.com/new-tool-gwget-wget-based-file-list-downloading-missing-files/</link>
      <pubDate>Mon, 16 Apr 2018 16:35:36 +0000</pubDate>
      
      <guid>https://wizguild.com/new-tool-gwget-wget-based-file-list-downloading-missing-files/</guid>
      <description>I had to pull only missing images from media folder of live to a staging server. Best way to do it was to &amp;#8230; create a tool that does exactly what I had to do.
http://github.com/shoobyban/gwget is the result. Enjoy.
&amp;nbsp;</description>
    </item>
    
    <item>
      <title>Simple session store in Go</title>
      <link>https://wizguild.com/simple-session-store-go/</link>
      <pubDate>Fri, 26 Jan 2018 23:25:15 +0000</pubDate>
      
      <guid>https://wizguild.com/simple-session-store-go/</guid>
      <description>I needed to store values in a key-value store that would persist after restarting the program. I&amp;#8217;m not good at finding things on the internet until I know what exactly to search for.
So instead, I have written a simple package for storing my data session-like way.
https://github.com/shoobyban/simplesession is the result.
// Simple counter program using session storage package main import ( &#34;github.com/shoobyban/simplesession&#34; &#34;fmt&#34; ) func main () { sess, err := simplesession.</description>
    </item>
    
    <item>
      <title>Golang experiments, Data Transformation</title>
      <link>https://wizguild.com/golang-experiments/</link>
      <pubDate>Tue, 23 Jan 2018 16:56:08 +0000</pubDate>
      
      <guid>https://wizguild.com/golang-experiments/</guid>
      <description>Wow, two years without (published) post!
I&amp;#8217;ve started to experiment with Go in the meantime. I have to admit I&amp;#8217;m far from being able to write good code in Go, not that I could tell this from any other programming languages, but hey, it&amp;#8217;s something.
As my normal day job involves some backend here and there and we are doing some serious ETL magic, I had to look around for a transformation language.</description>
    </item>
    
    <item>
      <title>PIM weekend update</title>
      <link>https://wizguild.com/pim-weekend-update/</link>
      <pubDate>Sun, 01 Mar 2015 21:45:49 +0000</pubDate>
      
      <guid>https://wizguild.com/pim-weekend-update/</guid>
      <description>Rewriting software is good. Code katas are good. Painful but good. Implementing the PIM on one platform and reimplementing it on a different one is especially painful.
Implementing API instead of direct database connection feels nice though.
As well as having an established framework like Symfony2. I had no real problem with the other one but when I will have to support it longer than the support will be available for the framework, sounds like a good idea to just switch – and learn everything again.</description>
    </item>
    
    <item>
      <title>PIM updates</title>
      <link>https://wizguild.com/pim-updates/</link>
      <pubDate>Tue, 24 Feb 2015 21:52:44 +0000</pubDate>
      
      <guid>https://wizguild.com/pim-updates/</guid>
      <description>In the past few weeks I have been working on the PIM (Product Management System) for my Magento instance. With the current setup we can work on the products without having to touch Magento admin.
Product data is versioned and synchronised both ways on every PIM product list display – this is not optimal but works well, I will probably create a cron job.
Attributes and attribute sets are also synchronised, CRUD is ready but I don&amp;#8217;t want to show it on the frontend.</description>
    </item>
    
    <item>
      <title>Simple Product Information Management system for Magento</title>
      <link>https://wizguild.com/simple-pim-for-magento/</link>
      <pubDate>Fri, 13 Feb 2015 07:31:56 +0000</pubDate>
      
      <guid>https://wizguild.com/simple-pim-for-magento/</guid>
      <description>Product Information Management systems help you to manage product information centrally. In a sense Magento is a PIM.
Magento doesn&amp;#8217;t allow you to have versioned product data. In most cases this is not a problem, because you want to sell based on the latest information and you have a reliable content management team. But what if this is not the case, you have computer illiterate shop assistants or old people trying to manage the site?</description>
    </item>
    
    <item>
      <title>Bee-Bot and Sphero magic is coming</title>
      <link>https://wizguild.com/bee-bot-and-sphero-magic-is-coming/</link>
      <pubDate>Tue, 11 Feb 2014 10:02:56 +0000</pubDate>
      
      <guid>https://wizguild.com/bee-bot-and-sphero-magic-is-coming/</guid>
      <description>We have a new pet at home – a Sphero. Kids love it but most of the programming tools are not for 5 years olds. With the help of old turtle logic and their recent experience playing with Bee-Bots in school we had some fun already. Keep your eyes open, BeeSphero is coming!
[Update 30/04/2014] Bee support didn&amp;#8217;t react to my support request yet (Apple needs their approval too), I suppose they are busy developing the other bots&amp;#8230;</description>
    </item>
    
    <item>
      <title>New iRecipeBook release and more</title>
      <link>https://wizguild.com/new-irecipebook-release-and-more/</link>
      <pubDate>Wed, 12 Dec 2012 11:39:14 +0000</pubDate>
      
      <guid>https://wizguild.com/new-irecipebook-release-and-more/</guid>
      <description>iRecipeBook released in App Store just few weeks ago but we already have news about further developments. The new release will support iPad, will have iOS usability and design improvements.
We plan to release it just before Christmas!</description>
    </item>
    
    <item>
      <title>TextWrangler PHPTidy filter</title>
      <link>https://wizguild.com/textwrangler_phptidy_filter/</link>
      <pubDate>Mon, 22 Oct 2012 13:59:06 +0000</pubDate>
      
      <guid>https://wizguild.com/textwrangler_phptidy_filter/</guid>
      <description>I love TextWrangler. Performance of TextWrangler is just incredible compared to the alternatives. Just try to open a few hundred megabytes long XML and do a search and replace. Others will give you the spinning beach-ball for minutes. Its only real weakness is long lines. I miss few key features, though. I&amp;#8217;m not a big fan of BBedit, those extra features are not for me, I actually found them very distracting.</description>
    </item>
    
    <item>
      <title>Updated iRecipeBook finally</title>
      <link>https://wizguild.com/updated-irecipebook-finally/</link>
      <pubDate>Wed, 11 Jan 2012 21:22:12 +0000</pubDate>
      
      <guid>https://wizguild.com/updated-irecipebook-finally/</guid>
      <description>It took terribly long to fix the built-in web server. Thank you for your support by using the App and sorry for annoyances. The focus is on social networking features now.
As the database is bigger and bigger, especially after uploading images for every recipe I&amp;#8217;ve realized maybe we will have to implement an option to get rid of big images. The big image feature was introduced to help social networking publication, but clearly we can&amp;#8217;t sacrifice launch performance.</description>
    </item>
    
    <item>
      <title>English – Hungarian dictionary and idiom dictionary for Mac OS X spotlight</title>
      <link>https://wizguild.com/english-hungarian-dictionary-and-idiom-dictionary-for-mac-os-x-spotlight/</link>
      <pubDate>Mon, 05 Dec 2011 11:50:43 +0000</pubDate>
      
      <guid>https://wizguild.com/english-hungarian-dictionary-and-idiom-dictionary-for-mac-os-x-spotlight/</guid>
      <description>This is an English &amp;#8211; Hungarian dictionary and English idiom &amp;#8211; Hungarian dictionary for Mac OS X spotlight. Install the unzipped files it into /Library/Dictionaries and check /Applications/Dictionary.app settings for details.
          Download: Dictionary.zip 15.29 MB</description>
    </item>
    
  </channel>
</rss>